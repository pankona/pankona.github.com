name: generate_site_and_deploy

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      # Keep same version with `make deps`
      HUGO_VERSION: 0.117.0
    steps:
    - name: Install Hugo CLI
      run: |
        wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
        && sudo dpkg -i ${{ runner.temp }}/hugo.deb
    - name: Install Dart Sass Embedded
      run: sudo snap install dart-sass-embedded
    - name: Checkout
      uses: actions/checkout@v4
    # Required go env because hugo module depends on it
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version-file: 'go.mod'
        cache-dependency-path: 'go.sum'
    - name: Setup Pages
      id: pages
      uses: actions/configure-pages@v3
    - name: Install Node.js dependencies
      run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"
    - name: Build with Hugo
      env:
        # For maximum backward compatibility with Hugo modules
        HUGO_ENVIRONMENT: production
        HUGO_ENV: production
      run: |
        hugo --panicOnWarning \
          --gc \
          --minify \
          --baseURL "${{ steps.pages.outputs.base_url }}/"
    - name: Upload artifact
      if: github.event.sender.login == 'pankona'
      uses: actions/upload-pages-artifact@v2
      with:
        path: ./public
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.event.sender.login == 'pankona' && github.event_name != 'pull_request'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2

