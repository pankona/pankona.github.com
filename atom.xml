<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[make clean; make]]></title>
  <link href="http://pankona.github.io/atom.xml" rel="self"/>
  <link href="http://pankona.github.io/"/>
  <updated>2014-05-10T01:00:59+09:00</updated>
  <id>http://pankona.github.io/</id>
  <author>
    <name><![CDATA[pankona]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Raspberry Pi + カメラモジュール + Webで配信]]></title>
    <link href="http://pankona.github.io/blog/2014/05/05/raspi-livestream-web/"/>
    <updated>2014-05-05T23:38:52+09:00</updated>
    <id>http://pankona.github.io/blog/2014/05/05/raspi-livestream-web</id>
    <content type="html"><![CDATA[<p>Raspberry Piにカメラモジュールを接続し、映像をWebで配信させてみた。<br>
いろいろ悩んだ点もあったので、やり方の結論をメモしておく。<br>
ちなみに、Raspberry PiにはArch Linux (ARM版) を載せている。</p>

<h2 id="良さそうな例">良さそうな例</h2>

<p>参考にしたウェブサイトは↓。結論からするとここだけでOKだった。<br>
<a href="https://github.com/jacksonliam/mjpg-streamer">https://github.com/jacksonliam/mjpg-streamer</a></p>

<h2 id="上記のリポジトリの情報を元にやったこと">上記のリポジトリの情報を元にやったこと</h2>

<h3 id="mjpg-streamerのインストール。">mjpg-streamerのインストール。</h3>

<p>上記のリポジトリからソースコードをもってきてビルド。ビルド方法も上記のリポジトリのREADMEに記載されている。<br>
pacmanであったりyaourtで取得できるmjpg-streamerのパッケージは使わない。それらはinput_raspicam.soを作ってくれないため。</p>

<h3 id="超簡単にhtmlを書く。">超簡単にhtmlを書く。</h3>

<p>下記のような。とりあえずサンプルなので、簡単に。。<br>
書いたHTMLは、任意の場所におく。ここではひとまず、<code>~/www/index.html</code>として置いたとする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;html&gt;</span>
</span><span class='line'>  <span class="nt">&lt;body&gt;</span>
</span><span class='line'>    <span class="nt">&lt;h1&gt;</span>Raspberry Pi<span class="nt">&lt;/h1&gt;</span>
</span><span class='line'>    <span class="nt">&lt;img</span> <span class="na">src=</span><span class="s">&quot;/?action=stream&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/body&gt;</span>
</span><span class='line'><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>

<h3 id="配信するコマンドを実行する。">配信するコマンドを実行する。</h3>

<p>このコマンドも件のリポジトリに記載されているが、一応。<br>
ライブラリ（.so）へのパスが通ってなかったら、LD_LIBRARY_PATHを設定してライブラリへのパスを通すか、もしくはライブラリをフルパスで指定する。</p>

<p><code>mjpg_streamer -o &quot;output_http.so -w ./www&quot; -i &quot;input_raspicam.so -x 1280 -y 720 -fps 15 -ex night&quot;</code></p>

<p>こんな感じに入力してやると、カメラが動き出して動画配信が始まる。<br>
別のPC等からブラウザで、</p>

<p><code>http://[Raspberry PiのIPアドレス]:8080/</code></p>

<p>にアクセスしてあげると、カメラが写してる画像が配信されているのが確認できると思われる。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pygmentsがエラーを吐きやがるので修正]]></title>
    <link href="http://pankona.github.io/blog/2014/04/28/fix-pygments/"/>
    <updated>2014-04-28T21:15:16+09:00</updated>
    <id>http://pankona.github.io/blog/2014/04/28/fix-pygments</id>
    <content type="html"><![CDATA[<p>Octopressのカスタマイズを続けていく。</p>

<h2 id="fenced-code-block-がうまく表示されない">Fenced Code Block がうまく表示されない</h2>

<p>具体的にどのようにうまく表示されないかというと、</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>{% hogehoge %}</span></code></pre></td></tr></table></div></figure>

<p>といった表記。％で囲まれてる部分も Fenced Code Block を使って表示してもらいたいところであったが、<br><br>
コメントとしてみなされてしまっているようで、表示してもらえないという感じに。</p>

<p>結果として、</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>{\% codeblock %}
</span><span class='line'>{\% raw %}
</span><span class='line'>{% hogehoge %}
</span><span class='line'>{\% endraw %}
</span><span class='line'>{\% endcodeblock %}</span></code></pre></td></tr></table></div></figure>

<p>というので書くことができた。raw ~ endraw というのを使う。<br><br>
ただ、↑に書いている通り、ネストさせることができなかったのでバックスラッシュ突っ込んでお茶を濁した。。<br><br>
ネストさせるのはどうやればいいのかな？</p>

<h2 id="fenced-code-block-にファイル名が表示できない">Fenced Code Block にファイル名が表示できない</h2>

<p>Fenced Code Block を書くときに、↓のような書き方をするとコードブロックにちょっとした注釈が出る。</p>

<p><code>{% codeblock about.html %}</code><br></p>

<p>出るという触れ込みだったのだが、なかなかどうして出なかった。</p>

<p>結論からすると、これはうちのArchlinuxがpython3を使おうとしているためだった。<br><br>
PygmentsというやつがPython2.7を求めているところを、違うバージョンのPythonが使われちゃって失敗してた感じ。</p>

<p>修正方法は以下のページを参考にしました。というかそのまま使わせていただきました。多謝。<br>
<a href="http://www.nonsenseby.me/blog/2013/04/13/arch-linux/">Arch Linux, Octopress, and misbehaving Pygments - Nonsense By Me</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OctopressにGravatarの画像が出るようにしてみた]]></title>
    <link href="http://pankona.github.io/blog/2014/04/26/octopress-custom/"/>
    <updated>2014-04-26T20:19:19+09:00</updated>
    <id>http://pankona.github.io/blog/2014/04/26/octopress-custom</id>
    <content type="html"><![CDATA[<p>引き続きOctopressをカスタマイズしていく。</p>

<h3 id="サイドバーにgravatarの画像を出すように">サイドバーにGravatarの画像を出すように</h3>

<p>京都で食べた抹茶パンケーキ（←旨い）の画像を載せるように。<br>
自分のブログ感が出て良い。</p>

<p>以下のGravatarプラグインを使わせてもらいました。多謝。</p>

<p><a href="https://github.com/joet3ch/gravatar-octopress">joet3ch/gravatar-octopress</a></p>

<p>↑を導入すると、Gravatarの画像をimgタグ的にひっぱってこれるようになるので、<br>
それを参考にしつつ、souce/_include/custom/asides/about.html を編集してった感じ。</p>

<p>about.html はこんな感じに。</p>

<figure class='code'><figcaption><span>about.html </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;section&gt;</span>
</span><span class='line'>  <span class="nt">&lt;h1&gt;</span>About Me<span class="nt">&lt;/h1&gt;</span>
</span><span class='line'>  {% if site.gravatar_email %}
</span><span class='line'>    <span class="nt">&lt;img</span> <span class="na">src=</span><span class="s">&quot;{% gravatar_image %}&quot;</span> <span class="na">alt=</span><span class="s">&quot;Gravatar of {{site.author}}&quot;</span> <span class="na">title=</span><span class="s">&quot;Gravatar of {{ site.author }}&quot;</span> <span class="na">align=</span><span class="s">&quot;left&quot;</span> <span class="na">style=</span><span class="s">&quot;margin-right:10px;&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  {% endif %}
</span><span class='line'>  Arch Linux on Vaio Pro 13で日々遊んでます。Octopressはvimで編集。武蔵野線ユーザ。一応、ソフトウェアエンジニア。
</span><span class='line'>  <span class="nt">&lt;br</span> <span class="na">clear=</span><span class="s">&quot;left&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;/section&gt;</span>
</span></code></pre></td></tr></table></div></figure>

<h3 id="commentをかけるようにdisqusを設定">CommentをかけるようにDisqusを設定</h3>

<p>各ポストにコメントがかけるような感じにしてみた。いかにもブラグらしい。<br><br>
設定方法をざっくり書いておくと、</p>

<p><span><br>
1. Disqusのアカウントを作り、ブログサイトに関する情報を登録するとshort nameが取得できる<br>
2. _config.ymlのdisqus_short_nameに、↑で取得したshort nameを設定する<br>
</span></p>

<p>次はテーマを変更してみようかな。デフォルトでもそこそこかっこいいが。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopressにタグクラウドとカテゴリリストを追加してみた]]></title>
    <link href="http://pankona.github.io/blog/2014/04/25/add-category-list/"/>
    <updated>2014-04-25T21:11:53+09:00</updated>
    <id>http://pankona.github.io/blog/2014/04/25/add-category-list</id>
    <content type="html"><![CDATA[<p>Octopressにプラグインを追加して、tag_cloundとcategory_listを表示できるようにしてみた。<br>
見た目デフォルトのままというのも微妙なので、徐々にカスタマイズしていこう。</p>

<p>tag_cloud、category_listの追加については以下のページを参考にさせていただきました。多謝。<br>
<a href="http://rcmdnk.github.io/blog/2013/03/23/octopress/">http://rcmdnk.github.io/blog/2013/03/23/octopress/</a></p>

<p>次はサイドバーに筆者プロフィールをGravatarと共に載せる、みたいな感じにしてみようかな。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopressでブログを始めてみる]]></title>
    <link href="http://pankona.github.io/blog/2014/04/24/start-blog-with-octopress/"/>
    <updated>2014-04-24T21:44:52+09:00</updated>
    <id>http://pankona.github.io/blog/2014/04/24/start-blog-with-octopress</id>
    <content type="html"><![CDATA[<p>ちょっと長めの通勤時間を有効活用するため、軽く技術的な内容の備忘録というか、日記をつけてみることにした。<br>
マークダウンの書き方すらよくわかっていないが、徐々にいろいろと進歩させていこうと思う。</p>

<p>私は一応プログラマをやっている。なので色々困ったことにでくわし、そのたびに解決方法を調べつつ業務にあたっている。<br>
きっと私が困ったところは、おそらく世の中の誰かが同じように困っているであろうと信じ、本ブログがその助けになることを願うと共に、<br>
基本的には日々の調査結果なんかをここにアウトプットしていきたいと思っている。</p>

<p>細く、長く、続けて行ければ。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Second Post]]></title>
    <link href="http://pankona.github.io/blog/2014/04/23/second-post/"/>
    <updated>2014-04-23T21:05:35+09:00</updated>
    <id>http://pankona.github.io/blog/2014/04/23/second-post</id>
    <content type="html"><![CDATA[]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[First Post]]></title>
    <link href="http://pankona.github.io/blog/2014/04/23/first-post/"/>
    <updated>2014-04-23T21:04:21+09:00</updated>
    <id>http://pankona.github.io/blog/2014/04/23/first-post</id>
    <content type="html"><![CDATA[]]></content>
  </entry>
  
</feed>
